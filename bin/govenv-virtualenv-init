#!/usr/bin/env bash
# Summary: Configure the shell environment for govenv-virtualenv
# Usage: eval "$(govenv virtualenv-init - [<shell>])"
#
# Automatically activates a Golang virtualenv environment based on current
# govenv version.
#

set -e
[ -n "$GOVENV_DEBUG" ] && set -x

resolve_link() {
  $(type -p greadlink readlink | head -1) "$1"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

GOVENV_VIRTUALENV_INSTALL_PREFIX="$(dirname "$(abs_dirname "$0")")"

print=""
for args in "$@"
do
  if [ "$args" = "-" ]; then
    print=1
    shift
  fi
done

shell="${1:-$GOVENV_SHELL}"
if [ -z "$shell" ]; then
  shell="$(ps -p "$PPID" -o 'args=' 2>/dev/null || true)"
  shell="${shell##-}"
  shell="${shell%% *}"
  shell="${shell:-$SHELL}"
  shell="${shell##*/}"
fi

if [ -z "$print" ]; then
  case "$shell" in
  bash )
    profile='~/.bash_profile'
    ;;
  zsh )
    profile='~/.zshrc'
    ;;
  ksh )
    profile='~/.profile'
    ;;
  fish )
    profile='~/.config/fish/config.fish'
    ;;
  * )
    profile='your profile'
    ;;
  esac

  { echo "# Load govenv-virtualenv automatically by adding"
    echo "# the following to ${profile}:"
    echo
    case "$shell" in
    fish )
      echo 'status --is-interactive; and source (govenv virtualenv-init -|psub)'
      ;;
    * )
      echo 'eval "$(govenv virtualenv-init -)"'
      ;;
    esac
    echo
  } >&2

  exit 1
fi

case "$shell" in
fish )
  cat <<EOS
set -gx PATH '${GOVENV_VIRTUALENV_ROOT:-${GOVENV_VIRTUALENV_INSTALL_PREFIX}}/shims' \$PATH;
set -gx GOVENV_VIRTUALENV_INIT 1;
EOS
  ;;
* )
  cat <<EOS
export PATH="${GOVENV_VIRTUALENV_ROOT:-${GOVENV_VIRTUALENV_INSTALL_PREFIX}}/shims:\${PATH}";
export GOVENV_VIRTUALENV_INIT=1;
EOS
  ;;
esac

case "$shell" in
fish )
  cat <<EOS
function _govenv_virtualenv_hook --on-event fish_prompt;
  set -l ret \$status
  if [ -n "\$VIRTUAL_ENV" ]
    govenv activate --quiet; or govenv deactivate --quiet; or true
  else
    govenv activate --quiet; or true
  end
  return \$ret
end
EOS
 ;;
ksh )
  cat <<EOS
function _govenv_virtualenv_hook() {
EOS
  ;;
* )
  cat <<EOS
_govenv_virtualenv_hook() {
EOS
  ;;
esac

if [[ "$shell" != "fish" ]]; then
  cat <<EOS
  local ret=\$?
  if [ -n "\$VIRTUAL_ENV" ]; then
    eval "\$(govenv sh-activate --quiet || govenv sh-deactivate --quiet || true)" || true
  else
    eval "\$(govenv sh-activate --quiet || true)" || true
  fi
  return \$ret
};
EOS

  case "$shell" in
  bash )
    cat <<EOS
if ! [[ "\$PROMPT_COMMAND" =~ _govenv_virtualenv_hook ]]; then
  PROMPT_COMMAND="_govenv_virtualenv_hook;\$PROMPT_COMMAND";
fi
EOS
    ;;
  zsh )
    cat <<EOS
typeset -g -a precmd_functions
if [[ -z \$precmd_functions[(r)_govenv_virtualenv_hook] ]]; then
  precmd_functions=(_govenv_virtualenv_hook \$precmd_functions);
fi
EOS
    ;;
  * )
    # FIXME: what should i do here??
    ;;
  esac
fi
